name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v2

    - name: Install dependencies
      run: bun install

    - name: Run linter
      run: bun run lint

    - name: Run type check
      run: bun run typecheck

    - name: Run unit tests
      run: bun test

    - name: Build
      run: bun run build

  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'

    - name: Setup Bun
      uses: oven-sh/setup-bun@v2

    - name: Install dependencies
      run: bun install

    - name: Build
      run: bun run build

    - name: Check if version should be published
      id: version
      run: |
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        # Use the correct scoped package name
        PUBLISHED_VERSION=$(npm view @goobits/cclsp version 2>/dev/null || echo "0.0.0")
        
        echo "Current version: $CURRENT_VERSION"
        echo "Published version: $PUBLISHED_VERSION"
        
        if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Version changed from $PUBLISHED_VERSION to $CURRENT_VERSION"
        else
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "Version unchanged: $CURRENT_VERSION"
        fi

    - name: Publish to npm
      if: steps.version.outputs.changed == 'true'
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
